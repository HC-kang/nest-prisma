// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  name            String
  email           String    @unique
  emailVerifiedAt DateTime?
  password        String
  level           Int       @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  posts           Post[]
  comments        Comment[]

  @@map("users")
}

model Post {
  id              Int       @id @default(autoincrement())
  title           String
  content         String
  strippedContent String
  postCategoryId  Int
  viewCount       Int       @default(0)
  isNotice        Boolean   @default(false)
  isSecret        Boolean   @default(false)
  isDraft         Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  user            User?     @relation(fields: [userId], references: [id])
  userId          Int?
  comments        Comment[]

  @@map("posts")
}

model Comment {
  id              Int      @id @default(autoincrement())
  content         String
  strippedContent String
  parentCommentId Int?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  user            User?    @relation(fields: [userId], references: [id])
  userId          Int?
  post            Post?    @relation(fields: [postId], references: [id])
  postId          Int?

  @@map("comments")
}

model PostCategory {
  id        Int       @id @default(autoincrement())
  name      String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  @@map("post_categories")
}

model Secret {
  id        Int      @id @default(autoincrement())
  urlId     String   @unique
  secret    String

  @@map("secrets")
}